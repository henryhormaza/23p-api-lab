pipeline {
  environment {
    registryCredential = 'alien-bruin-284822'
    json_key_file = credentials('alien-bruin-284822-json')
    str_key_file = credentials('alien-bruin-284822-str')
  }
  agent any
  // Get latest code from github
  stages {    
    stage('Cloning Git') {
      steps {                       
            git 'https://github.com/henryhormaza/23p-api-lab.git'
        }
    }    
    //terraform steps based on github files
    stage('Build_infra') {
        steps {
            dir("Terraform/"){                
                sh 'echo $str_key_file | base64 -d > core-waters-284316-892e73a3a61b.json'
                //Grant access to local-exec provider in order to perform kubectl orders
                sh "gcloud auth activate-service-account --key-file=${json_key_file}"
                sh "gcloud container clusters get-credentials p23-cluster --region us-central1 --project alien-bruin-284822"  
                //Backend initialization                          
                sh "terraform init -backend-config='credentials=${json_key_file}'"            
                sh "terraform apply  -auto-approve"                
                //Export some variables
                sh "terraform output -json > output.json"   
            }
        }
    }
    //Cleaning the terraform local tf-states to avoid issues with the pipeline
    stage('Clean Up Terraform backend') {
        steps {
            dir ('Terraform/.terraform') {
                deleteDir()
                sh "rm *"
            }
        }
    }
    //Build the docker image with the variables provided by terraform
    stage("Building image"){
        steps{
            script{                
                dockerImage = docker.build("alien-bruin-284822/23p-api-lab:latest",
                    "-f Docker/23p-api-lab.dockerfile .")
            }            
        }
    }
    // Pushing image to GCP Container registry
    stage("Pushing Image") {
        steps{
            script{
                
                docker.withRegistry('https://us.gcr.io', 'gcr:alien-bruin-284822') {
                    dockerImage.push("latest")
                }                    
            }   
        }        
    }    
    // force Deploy new image in PODS 
    stage('Rollout POD Image') {
        steps{
            script{                               
                sh "kubectl rollout restart deploy/p23"                
                sh "echo 'rollout'"
            }
        }
    }
  }
}
